import requests
from bs4 import BeautifulSoup

def search_anime_with_proxy(anime_name, proxy_address, proxy_port):
    proxy = {
        "http": f"http://{proxy_address}:{proxy_port}",
        "https": f"http://{proxy_address}:{proxy_port}"
    }
    
    base_url = "https://www.anisearch.de/anime/"
    search_url = f"{base_url}{anime_name}"
    
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
        'Referer': 'https://www.anisearch.de/',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1',
        'Sec-Fetch-Dest': 'document',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'same-origin',
        'Pragma': 'no-cache',
        'Cache-Control': 'no-cache'
    }
    
    try:
        test_response = requests.get(search_url, proxies=proxy, headers=headers)
        if test_response.status_code == 200:
            print("Proxy funktioniert. Anisearch wurde erfolgreich aufgerufen.")
        else:
            print("Proxy ist möglicherweise nicht korrekt konfiguriert.")
            return
    
        response = requests.get(search_url, proxies=proxy, headers=headers)
        if response.status_code == 200:
            html_content = response.text
            soup = BeautifulSoup(html_content, "html.parser")
            
            title_tag = soup.find("h1", class_="main-title")
            if title_tag:
                anime_title = title_tag.get_text(strip=True)
                print("Gefundener Anime Titel:", anime_title)
            else:
                print("Anime Titel nicht gefunden")
        else:
            print("Fehler beim Abrufen der Seite")
    except requests.exceptions.RequestException:
        print("Fehler beim Verbindungsaufbau über den Proxy.")

if __name__ == "__main__":
    anime_name = "_Summer"
    proxy_address = "80.150.50.226"
    proxy_port = "80"
    search_anime_with_proxy(anime_name, proxy_address, proxy_port)
